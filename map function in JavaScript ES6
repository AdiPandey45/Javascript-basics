ðŸ”· What is map() in JavaScript?
In JavaScript, the map() method is used to create a new array by applying a function to each element of an existing array.

It does not change the original array.

ðŸ”¶ Syntax:
array.map(function(element, index, array) {
  // return something
});
element: Current item in the array

index (optional): Index of the current item

array (optional): The original array

âœ… Example 1: Multiply each number by 2

const numbers = [1, 2, 3, 4, 5];

const doubled = numbers.map(function(num) {
  return num * 2;
});

console.log(doubled); // Output: [2, 4, 6, 8, 10]
âœ… This takes each number, multiplies it by 2, and returns a new array.

âœ… Example 2: Using an arrow function (shorter syntax)
const numbers = [1, 2, 3];

const squared = numbers.map(num => num * num);

console.log(squared); // Output: [1, 4, 9]
âœ… Example 3: Capitalize names
const names = ["adi", "riya", "sachin"];

const capitalized = names.map(name => name.charAt(0).toUpperCase() + name.slice(1));

console.log(capitalized); // Output: ["Adi", "Riya", "Sachin"]
âœ… Example 4: Extracting property values from objects
const students = [
  { name: "Adi", marks: 90 },
  { name: "Riya", marks: 85 },
  { name: "Arjun", marks: 92 }
];

const names = students.map(student => student.name);

console.log(names); // Output: ["Adi", "Riya", "Arjun"]
ðŸ”š Summary:
Feature	Description
What it does	Applies a function to each element
Returns	A new array
Original array	Unchanged
Common use cases	Transform data, modify arrays
